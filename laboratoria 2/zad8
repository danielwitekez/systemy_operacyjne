#include <stdio.h>
#include <signal.h>
#include <unistd.h>

void handleSignal(int signum) {
    printf("Otrzymano sygnał %d\n", signum);
}

void sendSignal(int pid, int signum) {
    sleep(1);
    kill(pid, signum);
}

void processOne() {
    signal(SIGUSR1, handleSignal);

    for (int i = 0; i < 6; i++) {
        sleep(1);
        sendSignal(getpid() + 2, SIGUSR1);
    }
}

void processTwo() {
    signal(SIGUSR1, handleSignal);
    signal(SIGUSR2, handleSignal);

    for (int i = 0; i < 6; i++) {
        pause();
        printf("Proces drugi: Otrzymano sygnał SIGUSR1, przesyłam SIGUSR2 do procesu trzeciego.\n");
        sendSignal(getpid() + 2, SIGUSR2);
    }
}

void processThree() {
    signal(SIGUSR2, handleSignal);

    for (int i = 0; i < 6; i++) {
        pause();
        printf("Proces trzeci: Otrzymano sygnał SIGUSR2, przesyłam SIGUSR1 do procesu drugiego.\n");
        sendSignal(getpid() - 2, SIGUSR1);
    }
}

void processFour() {
    signal(SIGUSR1, handleSignal);

    for (int i = 0; i < 6; i++) {
        pause();
        printf("Proces czwarty: Otrzymano sygnał SIGUSR1\n");
    }
}

int main(void) {
    pid_t pid2, pid3, pid4;

    if ((pid2 = fork()) == 0) {
        processTwo();
    } else if ((pid3 = fork()) == 0) {
        processThree();
    } else if ((pid4 = fork()) == 0) {
        processFour();
    } else {
        processOne();
    }

    return 0;
}
