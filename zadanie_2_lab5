#include <stdio.h>
#include <stdlib.h>
#include <semaphore.h>
#include <fcntl.h>
#include <unistd.h>

int main() {
    sem_t *sem_parent, *sem_child;
    const char *sem_parent_name = "/my_semaphore_parent";
    const char *sem_child_name = "/my_semaphore_child";

    sem_parent = sem_open(sem_parent_name, O_CREAT, 0644, 1);
    sem_child = sem_open(sem_child_name, O_CREAT, 0644, 0);

    if (sem_parent == SEM_FAILED || sem_child == SEM_FAILED) {
        perror("Nie można utworzyć semaforów");
        exit(EXIT_FAILURE);
    }

    pid_t child_pid = fork();

    if (child_pid < 0) {
        perror("Błąd przy tworzeniu potomka");
        exit(EXIT_FAILURE);
    } else if (child_pid == 0) {
        // Proces potomny
        for (int i = 0; i < 50; i++) {
            sem_wait(sem_child);
            printf("Jestem procesem potomnym (%d)\n", getpid());
            sem_post(sem_parent);
        }
    } else {
        for (int i = 0; i < 50; i++) {
            sem_wait(sem_parent);
            printf("Jestem procesem rodzicielskim (%d)\n", getpid());
            sem_post(sem_child);
        }
    }

    sem_close(sem_parent);
    sem_unlink(sem_parent_name);
    sem_close(sem_child);
    sem_unlink(sem_child_name);

    return 0;
}
