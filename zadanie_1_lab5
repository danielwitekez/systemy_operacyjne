#include <stdio.h>
#include <stdlib.h>
#include <semaphore.h>
#include <fcntl.h>
#include <unistd.h>

int main() {
    sem_t *sem;

    // Utworzenie i inicjalizacja semafora
    sem = sem_open("/my_semaphore", O_CREAT, 0644, 1);
    if (sem == SEM_FAILED) {
        perror("Nie można utworzyć semafora");
        exit(EXIT_FAILURE);
    }

    pid_t child_pid = fork();

    if (child_pid < 0) {
        perror("Błąd przy tworzeniu potomka");
        exit(EXIT_FAILURE);
    } else if (child_pid == 0) {
        // Proces potomny
        for (int i = 0; i < 50; i++) {
            sem_wait(sem);

            printf("Jestem procesem potomnym (%d)\n", getpid());

            sem_post(sem);
        }
    } else {
        // Proces rodzicielski
        for (int i = 0; i < 50; i++) {
            sem_wait(sem);

            printf("Jestem procesem rodzicielskim (%d)\n", getpid());

            sem_post(sem);
        }
    }

    // Usunięcie semafora
    sem_close(sem);
    sem_unlink("/my_semaphore");

    return 0;
}
