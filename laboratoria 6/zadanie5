// program 1
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/sem.h>
#include <unistd.h>

int main(void) {
    int shmid, semid;
    char *shmaddr;
    struct shmid_ds shminfo;

    key_t key = ftok("shmfile", 'A');
    shmid = shmget(key, 1024, IPC_CREAT | 0666);

    if (shmid == -1) {
        perror("shmget");
        exit(1);
    }

    key_t semkey = ftok("semfile", 'A');
    semid = semget(semkey, 1, IPC_CREAT | 0666);

    if (semid == -1) {
        perror("semget");
        exit(1);
    }

    shmaddr = shmat(shmid, (void *)0, 0);

    if (shmaddr == (char *)-1) {
        perror("shmat");
        exit(1);
    }

    strcpy(shmaddr, "Komunikat z Programu A");

    for (int i = 0; i < 2; i++) {
        sleep(2);  

        shmctl(shmid, IPC_STAT, &shminfo);
        shminfo.shm_perm.mode = 0444;
        shmctl(shmid, IPC_SET, &shminfo);

        printf("Program A: Zmiana praw dostępu do pamięci dzielonej (tylko do odczytu)\n");
    }

    return 0;
}


// program 2

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/sem.h>
#include <unistd.h>

int main(void) {
    int shmid, semid;
    char *shmaddr;

    key_t key = ftok("shmfile", 'A'); 
    shmid = shmget(key, 1024, 0); 

    if (shmid == -1) {
        perror("shmget");
        exit(1);
    }

    key_t semkey = ftok("semfile", 'A'); 
    semid = semget(semkey, 1, 0);

    if (semid == -1) {
        perror("semget");
        exit(1);
    }

    shmaddr = shmat(shmid, (void *)0, 0);

    if (shmaddr == (char *)-1) {
        perror("shmat");
        exit(1);
    }

    for (int i = 0; i < 2; i++) {
        // Odczyt komunikatu z pamięci dzielonej
        printf("Program B: Odczytano z pamięci dzielonej: %s\n", shmaddr);

        sleep(2);
    }

    return 0;
}
